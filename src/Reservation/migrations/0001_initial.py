# Generated by Django 4.1.7 on 2023-05-09 12:29

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("Event", "0001_initial"),
        ("contenttypes", "0002_remove_content_type_name"),
        ("Configuration", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AbstractTicket",
            fields=[
                (
                    "code",
                    models.CharField(max_length=25, primary_key=True, serialize=False),
                ),
                (
                    "qrcode_is_validated",
                    models.BooleanField(
                        default=False,
                        verbose_name="vérifie si le qrcode a déjà été scanné",
                    ),
                ),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_%(app_label)s.%(class)s_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
        ),
        migrations.CreateModel(
            name="ExtraTicket",
            fields=[
                (
                    "abstractticket_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="Reservation.abstractticket",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("Reservation.abstractticket",),
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "abstractticket_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="Reservation.abstractticket",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Configuration.place",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("Reservation.abstractticket",),
        ),
        migrations.CreateModel(
            name="Reservation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, verbose_name="Adresse mail de la reservation"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        max_length=50, verbose_name="Nom de la personne qui a réserver"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        max_length=50, verbose_name="Prénom de la personne qui réserve"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        max_length=10,
                        verbose_name="Numéro de tel de la personne qui réserve",
                    ),
                ),
                (
                    "date",
                    models.DateTimeField(
                        default=datetime.datetime(2023, 5, 9, 14, 29, 28, 197114),
                        verbose_name="Date de la réservation",
                    ),
                ),
                (
                    "note",
                    models.CharField(
                        blank=True,
                        max_length=1000,
                        verbose_name="Remarque sur la réservation",
                    ),
                ),
                (
                    "drink_number",
                    models.IntegerField(
                        default=0,
                        verbose_name="Ticket boisson pris avec la réservation",
                    ),
                ),
                (
                    "food_number",
                    models.IntegerField(
                        default=0,
                        verbose_name="Ticket nourriture pris avec la réservation",
                    ),
                ),
                (
                    "paid",
                    models.BooleanField(default=False, verbose_name="État du payement"),
                ),
                (
                    "checkout_session",
                    models.CharField(
                        blank=True, max_length=70, verbose_name="Session du payement"
                    ),
                ),
                (
                    "representation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Event.representation",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="abstractticket",
            name="reservation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="Reservation.reservation",
            ),
        ),
        migrations.CreateModel(
            name="DrinkTicket",
            fields=[
                (
                    "extraticket_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="Reservation.extraticket",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("Reservation.extraticket",),
        ),
        migrations.CreateModel(
            name="FoodTicket",
            fields=[
                (
                    "extraticket_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="Reservation.extraticket",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("Reservation.extraticket",),
        ),
        migrations.CreateModel(
            name="SeatingTicket",
            fields=[
                (
                    "ticket_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="Reservation.ticket",
                    ),
                ),
                (
                    "seat_number",
                    models.CharField(max_length=3, verbose_name="Trigramme du siège"),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("Reservation.ticket",),
        ),
        migrations.CreateModel(
            name="StandingTicket",
            fields=[
                (
                    "ticket_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="Reservation.ticket",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("Reservation.ticket",),
        ),
    ]
