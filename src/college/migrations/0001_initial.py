# Generated by Django 4.1.6 on 2023-02-27 12:35

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_email', models.CharField(max_length=100, verbose_name="Email de l'admin")),
                ('admin_nom', models.CharField(max_length=50, verbose_name="Nom de l'admin")),
                ('admin_prenom', models.CharField(max_length=50, verbose_name="Prenom de l'admin")),
                ('admin_password', models.CharField(max_length=100, verbose_name="Mot de passe de l'admin")),
                ('admin_superadmin', models.BooleanField(default=False, verbose_name='Est un super admin ou non')),
                ('admin_date_creation', models.DateTimeField(default=datetime.datetime(2023, 2, 27, 13, 35, 54, 187296), verbose_name='Date de création du compte')),
                ('admin_is_archived', models.BooleanField(default=False, verbose_name='Admin archivé')),
            ],
        ),
        migrations.CreateModel(
            name='Evenement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('even_nom', models.CharField(max_length=200, unique=True, verbose_name="Nom de l'évènement")),
                ('even_date', models.DateTimeField(default=datetime.datetime(2023, 2, 27, 13, 35, 54, 188827), verbose_name='Date')),
                ('even_description', models.CharField(max_length=1000, verbose_name="Description de l'évènement")),
                ('even_illustration', models.ImageField(blank=True, null=True, upload_to='Images/', verbose_name="Image(s) de l'évènement(s)")),
                ('configuration_salle', models.CharField(choices=[('1', 'classique'), ('2', 'espacée'), ('3', 'proche')], default='classique', max_length=2000, verbose_name='Configuration de la salle')),
                ('even_duree', models.TimeField(verbose_name="Durée de l'événement")),
                ('admin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='college.admin')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reserv_email', models.EmailField(max_length=254, verbose_name='Adresse mail de la reservation')),
                ('reserv_nom', models.CharField(max_length=50, verbose_name='Nom de la personne qui a réserver')),
                ('reserv_prenom', models.CharField(max_length=50, verbose_name='Prénom de la personne qui réserve')),
                ('reserv_tel', models.CharField(max_length=10, verbose_name='Numéro de tel de la personne qui réserve')),
                ('reserv_date', models.DateTimeField(default=datetime.datetime(2023, 2, 27, 13, 35, 54, 188827), verbose_name='Date de la réservation')),
                ('reserv_remarque', models.CharField(max_length=1000, verbose_name='Remarque sur la réservation')),
                ('reserv_numero', models.IntegerField(verbose_name='Numéro du ticket pour le spectatcle')),
                ('evenement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='college.evenement')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_siege', models.CharField(max_length=3, verbose_name='Trigramme du siège')),
                ('ticket_debout', models.BooleanField(default=False, verbose_name='Place debout ou assise')),
                ('ticket_prix', models.FloatField(verbose_name='Prix de la place')),
                ('ticket_boisson', models.IntegerField(default=0, verbose_name='Ticket boisson pris avec la réservation')),
                ('ticket_nourriture', models.IntegerField(default=0, verbose_name='Ticket nourriture pris avec la réservation')),
                ('Reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='college.reservation')),
            ],
        ),
        migrations.CreateModel(
            name='Salle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salle_nom', models.CharField(max_length=50, verbose_name='Nom de la salle')),
                ('salle_nbr_places_normal', models.IntegerField(verbose_name='Nombres de places normales')),
                ('salle_configuration', models.FileField(upload_to='', verbose_name='Sauvegarde de la configuration de la salle')),
                ('createur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='college.admin')),
            ],
        ),
        migrations.CreateModel(
            name='CodePromo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codepromo_code', models.CharField(max_length=20, verbose_name='Le code à introduire')),
                ('codepromo_montant', models.FloatField(blank=True, default=0, verbose_name='Montant fixe de réduction')),
                ('codepromo_pourcentage', models.FloatField(blank=True, default=0, verbose_name='Pourcentage de reduction sur le prix total')),
                ('Evenement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='college.evenement')),
            ],
        ),
    ]
